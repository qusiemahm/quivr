[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "quivr-api"
version = "0.1.0"
description = "quivr backend API"
packages = [{ include = "quivr_api" }]
authors = ["aminediro <amine@quivr.app>"]
readme = "README.md"


[tool.poetry.dependencies]
quivr-core = { path = "../core", extras = ["base"] }
python = "3.12.4"
torch = [
    { version = "2.3.1", source = "pypi", platform = "darwin" },
    { version = "2.3.1", source = "pypi", platform = "linux", markers = "platform_machine != 'x86_64'" },
    { version = "2.3.1+cpu", source = "pytorch-cpu-src", platform = "linux", markers = "platform_machine == 'x86_64'" },
    { version = "2.3.1+cpu", source = "pytorch-cpu-src", platform = "win32" },
]
torchvision = [
    { version = "0.18.1", source = "pypi", platform = "darwin" },
    { version = "0.18.1", source = "pypi", platform = "linux", markers = "platform_machine != 'x86_64'" },
    { version = "0.18.1+cpu", source = "pytorch-cpu-src", platform = "linux", markers = "platform_machine == 'x86_64'" },
    { version = "0.18.1+cpu", source = "pytorch-cpu-src", platform = "win32" },
]
langchain = "0.2.6"
litellm = "1.41.2"
openai = "1.35.7"
gitpython = "3.1.43"
pdf2image = "1.17.0"
nest-asyncio = "1.6.0"
pypdf = "4.2.0"
supabase = "2.5.1"
tiktoken = "0.7.0"
fastapi = "0.111.0"
python-multipart = "0.0.9"
uvicorn = "0.30.1"
pypandoc = "1.13"
docx2txt = "0.8"
python-jose = "3.3.0"
asyncpg = "0.29.0"
pyright = "1.1.369"
resend = "2.1.0"
html5lib = "1.1"
beautifulsoup4 = "4.12.3"
newspaper3k = "0.2.8"
xlrd = "2.0.1"
redis = "5.0.7"
flower = "2.0.1"
boto3 = "1.34.136"
botocore = "1.34.136"
python-dotenv = "1.0.1"
pytesseract = "0.3.10"
async-generator = "1.10"
posthog = "3.5.0"
jq = "1.7.0"
pytest = "8.2.2"
watchdog = "4.0.1"
langchain-community = "0.2.6"
langchain-openai = "0.1.13"
pydantic-settings = "2.3.4"
langfuse = "2.36.2"
pandasai = "2.2.7"
colorlog = "6.8.2"
psycopg2-binary = "2.9.9"
celery = { extras = ["redis", "sqs"], version = "5.4.0" }
unstructured = { extras = ["all-docs"], version = "0.11.8" }
llama-parse = "0.4.4"
llama-index = "0.10.51"
lxml = { extras = ["html_clean"], version = "5.2.2" }
ragas = "0.1.9"
datasets = "2.20.0"
fpdf2 = "2.7.9"
unidecode = "1.3.8"
langchain-cohere = "0.1.8"
pyinstrument = "4.6.2"
playwright = "1.44.0"
langgraph = "0.1.4"
tavily-python = "0.3.3"
duckduckgo-search = "6.1.7"
google-api-python-client = "2.135.0"
google-auth-httplib2 = "0.2.0"
google-auth-oauthlib = "1.2.0"
msal = "1.29.0"
sentry-sdk = { version = "2.7.1", extras = ["fastapi"] }
sqlmodel = "0.0.19"
megaparse = "0.0.19"


[tool.poetry.group.dev.dependencies]
mypy = "1.10.1"
pre-commit = "3.7.1"
ipykernel = "6.29.4"
ruff = "0.4.10"
pytest-asyncio = "0.23.7"
flake8 = "7.1.0"
flake8-black = "0.3.6"
pytest = "8.2.2"
pytest-dotenv = "0.5.2"
pytest-mock = "3.14.0"
pytest-celery = "1.0.0"

[[tool.poetry.source]]
name = "pytorch-cpu-src"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.ruff]
line-length = 88
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "B904",
    "B006",
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]


[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
known-first-party = []

[tool.pytest.ini_options]
addopts = "--tb=short -ra -v"
filterwarnings = ["ignore::DeprecationWarning"]
